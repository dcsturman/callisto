# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  be:
    build:
      context: callisto
    secrets:
      - google_credentials
      - gcs_credentials
      - tls_keys_private
      - tls_keys_public
    command: --tls-keys-private /run/secrets/tls_keys_private --tls-keys-public /run/secrets/tls_keys_public --oauth-creds /run/secrets/google_credentials --scenario-file /scenarios/first_prize.json --users-file /config/authorized_users.json --design-file  /scenarios/default_ship_templates.json  --web-server http://localhost:50001
    environment:
      RUST_LOG: info,callisto::combat=debug
      GOOGLE_APPLICATION_CREDENTIALS: /run/secrets/gcs_credentials
    expose:
      - 30000
    ports:
      - 30000:30000
  fe:
    build:
      context: fe/callisto
      args:
        BACKEND: "http://localhost:30000"
        NODE_SERVER: "http://localhost:50001"
    expose:
      - 3000
    ports:
      - 50001:3000
secrets:
  google_credentials:
    file: callisto/secrets/google_credentials.json
  gcs_credentials:
    file: ~/.config/gcloud/application_default_credentials.json
  tls_keys_private:
    file: callisto/keys/localhost.key
  tls_keys_public:
    file: callisto/keys/localhost.crt


